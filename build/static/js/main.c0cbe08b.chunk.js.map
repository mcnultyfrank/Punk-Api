{"version":3,"sources":["SideBar/SideBar.module.scss","BeerCards/BeerCards.module.scss","SideBar/SearchBar/SearchBar.module.scss","BeerCards/Card/Card.jsx","BeerCards/index.js","BeerCards/BeerCards.jsx","SideBar/index.js","SideBar/SideBar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Card","props","beer","name","image_url","abv","tagline","className","styles","cardContainer","titleContainer","src","alt","BeerCards","showBeers","mainContainer","pageContainer","map","key","id","SideBar","handleStrongClick","handleWeakClick","handleMediumClick","handleStrongBitterClick","handleMediumBitterClick","handleWeakBitterClick","sidebarContainer","sidebarContent","inputText","type","placeholder","onChange","e","updateInput","target","value","beerStrengthRadioForm","strongRadio","for","onClick","mediumRadio","weakRadio","beerBitternessRadioForm","App","useState","setShowBeers","inputValue","setInputValue","getApi","search","fetch","then","res","json","response","searchGetApi","url","console","log","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0cbe08b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarContainer\":\"SideBar_sidebarContainer__28LvH\",\"sidebarContent\":\"SideBar_sidebarContent__3aCNG\",\"beerStrengthRadioForm\":\"SideBar_beerStrengthRadioForm__dyupT\",\"beerBitternessRadioForm\":\"SideBar_beerBitternessRadioForm__f8IBO\",\"randomButton\":\"SideBar_randomButton__2lYQh\",\"inputText\":\"SideBar_inputText__3JlMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"BeerCards_mainContainer__1ND8N\",\"pageContainer\":\"BeerCards_pageContainer__2JrXe\",\"cardContainer\":\"BeerCards_cardContainer__3WKJr\",\"titleContainer\":\"BeerCards_titleContainer__2Mi-d\",\"abv\":\"BeerCards_abv__2vWTK\",\"tagline\":\"BeerCards_tagline__3KZYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__1CxWa\"};","import React from \"react\";\nimport styles from \"../BeerCards.module.scss\";\n\n\n\nconst Card = (props) => {\n    const {name, image_url, abv, tagline} = props.beer;\n\n    return (\n            <article className={styles.cardContainer}>\n                    <div className={styles.titleContainer}>\n                        <h1>{name}</h1>\n                    </div>\n                <img src={image_url} alt=\"picture of beer\"/>\n                <h3 className={styles.abv}>{abv}%</h3>\n                <h3 className={styles.tagline}>{tagline}</h3>\n            </article>\n        \n    )\n\n};\n\nexport default Card;\n","import BeerCards from \"./BeerCards\";\n\nexport default BeerCards;\n","import React from \"react\";\nimport styles from \"./BeerCards.module.scss\";\nimport Card from \"./Card/Card\";\n \n\nconst BeerCards = (props) => {\n\n    const {showBeers} = props;\n\n  return (\n\n  <div className={styles.mainContainer}>\n    <section className={styles.pageContainer}>\n      {showBeers.map((beer)=> {\n        return <Card key={beer.id} beer={beer} />\n      })}\n    </section>\n\n  </div>\n  );\n};\n\nexport default BeerCards;\n","import SideBar from \"./SideBar\";\n\nexport default SideBar;\n","import React, {useEffect} from \"react\";\nimport styles from \"./SideBar.module.scss\";\nimport SearchBar from './SearchBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom } from \"@fortawesome/free-solid-svg-icons\";\nimport BeerCards from \"../BeerCards\";\n\n\nconst SideBar = (props) => {\n  const {handleStrongClick, handleWeakClick, handleMediumClick, handleStrongBitterClick, handleMediumBitterClick, handleWeakBitterClick} = props;\n\n\n  return (\n    <div className={styles.sidebarContainer}>\n      <section className={styles.sidebarContent}>\n          <input className={styles.inputText}type = \"text\" placeholder =\"Greatness awaits you...\" onChange={(e) => props.updateInput(e.target.value)}></input>\n        <form className={styles.beerStrengthRadioForm}>\n          <h3>Beer Strength</h3>\n            <div className={styles.strongRadio}>\n              <label for = \"strong\">Over 5%</label>\n              <input onClick={handleStrongClick} type=\"radio\" id=\"strong\" name = \"beerStrength\"></input>\n            </div>\n            <div className={styles.mediumRadio}>\n              <label for = \"medium\">0.5% - 5%</label>\n              <input onClick={handleMediumClick} type=\"radio\" id=\"medium\" name = \"beerStrength\"></input>\n            </div>\n            <div className={styles.weakRadio}>\n              <label for = \"weak\">Less than 0.5%</label>\n              <input onClick={handleWeakClick} type=\"radio\" id=\"weak\" name = \"beerStrength\"></input>\n            </div>\n        </form>\n        <form className={styles.beerBitternessRadioForm}>\n          <h3>Bitterness Level</h3>\n            <div className={styles.strongRadio}>\n              <label for = \"strongBitter\">Over 50 IBU</label>\n              <input onClick={handleStrongBitterClick} type=\"radio\" id=\"strongBitter\" name = \"beerBitterness\"></input>\n            </div>\n            <div className={styles.mediumRadio}>\n              <label for = \"mediumBitter\">10 - 50 IBU</label>\n              <input onClick={handleMediumBitterClick} type=\"radio\" id=\"mediumBitter\" name = \"beerBitterness\"></input>\n            </div>\n            <div className={styles.weakRadio}>\n              <label for = \"weakBitter\">Less than 10 IBU</label>\n              <input onClick={handleWeakBitterClick} type=\"radio\" id=\"weakBitter\" name = \"beerBitterness\"></input>\n            </div>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from 'react';\nimport './App.css';\nimport BeerCards from \"./BeerCards\";\nimport SideBar from \"./SideBar\";\nimport { useState, useEffect } from 'react';\n\n\nconst App = () => {\n  const [showBeers, setShowBeers] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  \n  const getApi = (search) => {\n    fetch(\"https://api.punkapi.com/v2/beers?\" + search)\n    .then((res) => res.json())\n      .then((response) => {\n        setShowBeers(response);\n      })\n  }\n\n  const searchGetApi = () => {\n    const url = \"https://api.punkapi.com/v2/beers?beer_name=\"  + inputValue;\n    fetch(url)\n    .then((res) => res.json())\n      .then((response) => {\n        console.log(\"Here is the response from \" + url)\n        console.log(response);\n        setShowBeers(response);\n     \n        \n      })\n  }\n\n  useEffect(getApi, []);\n  useEffect(() => {\n    console.log(\"input value is ...\" + inputValue)\n    if (inputValue) searchGetApi();   \n  }, [inputValue]);\n\n  const strongBeers = () => getApi(\"abv_gt=5\");\n  const mediumBeers = () => getApi(\"abv_lt=5\");\n  const weakBeers = () => getApi(\"abv_lt=1\");\n  const strongBitterBeers = () => getApi(\"ibu_gt=50\");\n  const mediumBitterBeers = () => getApi(\"ibu_lt=50\");\n  const weakBitterBeers = () => getApi(\"ibu_lt=10\");\n  \n  return (\n    <div>\n      <SideBar \n      // showBeers = {showBeers}\n      updateInput={searchGetApi}\n      // 2. pass function down to child component\n      handleStrongClick={strongBeers}\n      handleMediumClick={mediumBeers}\n      handleWeakClick={weakBeers}\n      handleStrongBitterClick={strongBitterBeers}\n      handleMediumBitterClick={mediumBitterBeers}\n      handleWeakBitterClick={weakBitterBeers}\n      updateInput={(value) => setInputValue(value)}\n      />\n      <BeerCards\n      showBeers = {showBeers}\n\n      />\n       \n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}