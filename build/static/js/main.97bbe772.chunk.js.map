{"version":3,"sources":["BeerCards/BeerCards.module.scss","SideBar/SideBar.module.scss","SideBar/SearchBar/SearchBar.module.scss","SideBar/index.js","SideBar/SideBar.jsx","BeerCards/Card/Card.jsx","BeerCards/index.js","BeerCards/BeerCards.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","SideBar","props","handleStrongClick","handleWeakClick","handleMediumClick","className","styles","sidebarContainer","sidebarContent","inputText","type","placeholder","onInput","e","updateInput","target","value","beerStrengthRadioForm","strongRadio","for","onClick","id","name","mediumRadio","weakRadio","Card","beer","image_url","abv","tagline","cardContainer","titleContainer","src","alt","BeerCards","showBeers","mainContainer","pageContainer","map","App","useState","setShowBeers","getApi","searchTerm","fetch","then","res","json","response","searchGetApi","search","console","log","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97bbe772.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"BeerCards_mainContainer__1ND8N\",\"pageContainer\":\"BeerCards_pageContainer__2JrXe\",\"cardContainer\":\"BeerCards_cardContainer__3WKJr\",\"titleContainer\":\"BeerCards_titleContainer__2Mi-d\",\"abv\":\"BeerCards_abv__2vWTK\",\"tagline\":\"BeerCards_tagline__3KZYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarContainer\":\"SideBar_sidebarContainer__28LvH\",\"sidebarContent\":\"SideBar_sidebarContent__3aCNG\",\"beerStrengthRadioForm\":\"SideBar_beerStrengthRadioForm__dyupT\",\"randomButton\":\"SideBar_randomButton__2lYQh\",\"inputText\":\"SideBar_inputText__3JlMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__1CxWa\"};","import SideBar from \"./SideBar\";\n\nexport default SideBar;\n","import React from \"react\";\nimport styles from \"./SideBar.module.scss\";\nimport SearchBar from './SearchBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom } from \"@fortawesome/free-solid-svg-icons\";\nimport BeerCards from \"../BeerCards\";\n\n\nconst SideBar = (props) => {\n  const {handleStrongClick, handleWeakClick, handleMediumClick} = props;\n  const searchTerm = (e) => props.updateInput(e.target.value);\n\n  return (\n    <div className={styles.sidebarContainer}>\n      <section className={styles.sidebarContent}>\n          <input className={styles.inputText}type = \"text\" placeholder =\"Greatness awaits you...\" onInput={searchTerm}></input>\n        <form className={styles.beerStrengthRadioForm}>\n          <h3>Beer Strength</h3>\n            <div className={styles.strongRadio}>\n            <label for = \"strong\">Over 5%</label>\n              <input onClick={handleStrongClick} type=\"radio\" id=\"strong\" name = \"beerStrength\"></input>\n            </div>\n            <div className={styles.mediumRadio}>\n            <label for = \"medium\">0.5% - 5%</label>\n              <input onClick={handleMediumClick} type=\"radio\" id=\"medium\" name = \"beerStrength\"></input>\n            </div>\n            <div className={styles.weakRadio}>\n            <label for = \"weak\">Less than 0.5%</label>\n              <input onClick={handleWeakClick} type=\"radio\" id=\"weak\" name = \"beerStrength\"></input>\n            </div>\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport styles from \"../BeerCards.module.scss\";\n\n\n\nconst Card = (props) => {\n    const {name, image_url, abv, tagline} = props.beer;\n\n    return (\n            <article className={styles.cardContainer}>\n                    <div className={styles.titleContainer}>\n                        <h1>{name}</h1>\n                    </div>\n                <img src={image_url} alt=\"picture of beer\"/>\n                <h3 className={styles.abv}>{abv}%</h3>\n                <h3 className={styles.tagline}>{tagline}</h3>\n            </article>\n        \n    )\n\n};\n\nexport default Card;\n","import BeerCards from \"./BeerCards\";\n\nexport default BeerCards;\n","import React, {useEffect} from \"react\";\nimport styles from \"./BeerCards.module.scss\";\nimport SideBar from \"../SideBar\"\nimport Card from \"./Card/Card\";\n \n\nconst BeerCards = (props) => {\n\n    const {showBeers} = props;\n\n  return (\n\n  <div className={styles.mainContainer}>\n    <section className={styles.pageContainer}>\n      {showBeers.map((beer)=> {\n        return <Card beer={beer} />\n      })}\n    </section>\n\n  </div>\n  );\n};\n\nexport default BeerCards;\n","import React from 'react';\nimport './App.css';\nimport BeerCards from \"./BeerCards\";\nimport SideBar from \"./SideBar\";\nimport { useState, useEffect } from 'react';\n\n\nconst App = () => {\n  // const [searchBeers, setSearchBeers] = useState('');\n  const [showBeers, setShowBeers] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const getApi = (searchTerm) => {\n    fetch(\"https://api.punkapi.com/v2/beers?\"  + searchTerm)\n    .then((res) => res.json())\n      .then((response) => {\n        setShowBeers(response);\n      })\n  }\n\n  const searchGetApi = (search) => {\n    fetch(\"https://api.punkapi.com/v2/beers?beer_name?\"  + \"buzz\")\n    .then((res) => res.json())\n      .then((response) => {\n        setShowBeers(response);\n        console.log(response);\n        \n        \n        console.log('this is the api log');\n        \n      })\n  }\n\n  useEffect(getApi, []);\n  useEffect(searchGetApi, []);\n  const strongBeers = () => {\n    return getApi(\"abv_gt=5\");\n  }\n  const mediumBeers = () => {\n    return getApi(\"abv_lt=5\");\n  }\n  const weakBeers = () => {\n    return getApi(\"abv_lt=1\");\n  }\n  return (\n    <div>\n      <SideBar \n      // showBeers = {showBeers}\n      updateInput={searchGetApi}\n      // 2. pass function down to child component\n      handleStrongClick={strongBeers}\n      handleMediumClick={mediumBeers}\n      handleWeakClick={weakBeers}\n\n\n\n      />\n      <BeerCards\n      showBeers = {showBeers}\n\n      />\n       \n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}